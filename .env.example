# You can get a hosted PostgreSQL Database using Heroku, Digital Ocean
DATABASE_URL=""
# can be generated by running `openssl rand -hex 32`
AUTH0_SECRET =''

# Can be found in the App settings
AUTH0_BASE_URL='http://localhost:3000'
AUTH0_ISSUER_BASE_URL=''
AUTH0_CLIENT_ID = ''
AUTH0_CLIENT_SECRET = ''

# change `http://localhost:3000` to the domain of your app in production
AUTH0_CALLBACK_URL = 'http://localhost:3000/api/auth/callback'
# To be sent to the /api/auth/hook endpoint to add users to the database
AUTH0_HOOK_SECRET = ''

AWS_ACCESS_KEY = ''
AWS_SECRET_KEY = ''
AWS_REGION = ''
AWS_S3_BUCKET_NAME = ''

GCP_PROJECT_ID=''

GCP_CLIENT_EMAIL=''

GCP_PRIVATE_KEY=''

GCP_BUCKET_NAME=''







Download the Google Cloud SDK so you can use the gcloud CLI.

Run gcloud auth login.

Inside Google Cloud, create a new project nextjs-storage-bucket.

Run gcloud config set project nextjs-storage-bucket.

Run gcloud auth application-default login, per setup instructions.

Run pulumi up to deploy your bucket (it will prompt you to log in).

View your newly created bucket and add the bucket name to .env.local (see .env.example).

Create a new service account with a role of Storage Object Creator.

Click "Create Key" and save the JSON file.

Add the project_id, client_email, and private_key to .env.local (see .env.example).

Run yarn dev to start the Next app at localhost:3000.

Choose a .png or .jpg file.

You should see your file successfully uploaded to the bucket.